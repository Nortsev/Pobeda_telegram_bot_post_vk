# -*- coding: utf-8 -*-
import vk_api
from typing import List
import configparser
from access_token import access_token
config = configparser.ConfigParser()
config.read("config.ini")
login_vk = config["VK"]["login"]
password_vk = config["VK"]["password"]
token_vk = config["VK"]["token_vk"]
owner_id = config["VK"]["owner_id"]
album_name = config["VK_POST"]["album_name"]


def text_messages(filial, city, phone_number):
    text_message = f"""–î–æ—Ä–æ–≥–∏–µ –∂–∏—Ç–µ–ª–∏ –∏ –≥–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞, –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Ñ–∏–ª–∏–∞–ª–µ –ü–û–ë–ï–î–´ –ø–æ –∞–¥—Ä–µ—Å—É:
                    –ì–æ—Ä–æ–¥: {city}
                    –§–∏–ª–∏–∞–ª: üè™ {filial}
                    ‚òé–ó–≤–æ–Ω–∏—Ç–µ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ —Ç–µ–ª. {phone_number}, –∞ –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ, –±—É–¥–µ–º —Ä–∞–¥—ã –í–∞—Å –≤–∏–¥–µ—Ç—å! üòâ 
                    üëâ–ü—Ä–æ–∏–∑–≤–æ–¥–∏–º —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é –û–¶–ï–ù–ö–£ üî•üî•
                    üëâ–û–Ω–ª–∞–π–Ω –û–¶–ï–ù–ö–£ —á–µ—Ä–µ–∑ –Ω–∞—à —Å–∞–π—Ç üî•üî•
                    üëâ –°–∞–º—ã–µ –ø—Ä–∏—è—Ç–Ω—ã–µ –¶–ï–ù–´ –Ω–∞ —Ç–æ–≤–∞—Ä üî•üî•
                    üí•–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ö–†–£–ì–õ–û–°–£–¢–û–ß–ù–û! ‚è∞
                    ‚Äº–ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ —Ç–æ–≤–∞—Ä –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞ —Å–∞–π—Ç–µ üëâüëâüëâ–ø–æ–±–µ–¥–∞-63.—Ä—Ñüëàüëàüëà
                    ‚Äº‚Äº‚Äº–¢–∞–∫ –∂–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –≤ –∫—Ä–µ–¥–∏—Ç —á–µ—Ä–µ–∑ –Ω–∞—à —Å–∞–π—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ‚Äº‚Äº‚Äº
                    üí•–¢–∞–∫-–∂–µ –Ω–∞ –Ω–∞—à–µ–º —Ñ–∏–ª–∏–∞–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ª—é–±–æ–π –∞–∫—Å–µ—Å—Å—É–∞—Ä –¥–ª—è —Å–≤–æ–µ–≥–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞" –ß–µ—Ö–æ–ª, –∑—É, –Ω–∞—É—à–Ω–∏–∫–∏, –±—Ä–æ–Ω—å —Å—Ç—ë–∫–ª–∞, –º–æ–Ω–æ–ø–æ–¥—ã (—Å–µ–ª—Ñ–∏ –ø–∞–ª–∫–∞), aux.üí•
                    üôÄ–ü—Ä–∏ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞–ª–ª—ã. 1 –±–∞–ª–ª —Ä–∞–≤–Ω—è–µ—Ç—Å—è —Ä—É–±–ª—é. –∑–∞ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–∞–∫ –∂–µ —Ç–æ–≤–∞—Ä –Ω–∞ –≤–∞—à –≤—ã–±–æ—Ä üôÄ
                    –í—Å—è —Ç–µ—Ö–Ω–∏–∫–∞ –∞–±—Å–æ–ª—é—Ç–Ω–æ –∏—Å–ø—Ä–∞–≤–Ω–∞ üòä
                    –ü–æ–º–æ–∂–µ–º –≤–∞–º —Å –≤—ã–±–æ—Ä–æ–º –ª—é–±–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã üòâ"""
    return text_message

class VKApi:

    def __init__(self):
        self.login = login_vk
        self.password = password_vk
        self.access_token = access_token
        self.token = token_vk
        self.owner_id = int(owner_id)
        self.album_name = album_name
        self.vk_session = self.create_session(self.login, self.token)

    def create_session(self, login, token):
        vk_session = vk_api.VkApi(login=login, token=token)
        try:
            vk_session.auth(token_only=True)
            print("–°–æ–µ–¥–µ–Ω–µ–Ω–∏–µ —Å –≤–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ")
        except vk_api.AuthError as error_connect:
            print(error_connect)
        return vk_session

    def upload_photo(self, photo_path: bytes, caption: str, album_id: str):
        upload = vk_api.VkUpload(self.vk_session)
        vk_photo = upload.photo(photos=photo_path, album_id=album_id,
                                caption=[caption])[0]
        return f'photo{vk_photo["owner_id"]}_{vk_photo["id"]}'

    def post_wall(self, owner_id: int, text_message: str, vk_photos: List[str]):
        self.vk_session.token = access_token
        vk_photos_id = ",".join(vk_photos)
        vk_post = self.vk_session.method('wall.post', {
            'owner_id': -owner_id,
            'message': text_message,
            'attachments': vk_photos_id
        })
        print("–ü–æ—Å—Ç –≤ –≤–∫ –≥–æ—Ç–æ–≤")
        return vk_post

    def post_group_wall(self, photos_path: list, captions: list, filial: str, sity: str,phone_number : str, album_id: str):
        vk_photos_id = [self.upload_photo(photo_path, caption, album_id)
                        for photo_path, caption in zip(photos_path, captions)]
        text_message = text_messages(filial, sity, phone_number)
        vk_post = self.post_wall(self.owner_id, text_message, vk_photos_id)
        return vk_post

    def get_album_id(self):
        self.vk_session.token = access_token
        photo_albums = self.vk_session.method('photos.getAlbums', {"owner_id": 615022059})
        vk_albums = photo_albums['items']
        for album in vk_albums:
            if album['title'] == self.album_name:
                print('–¢–∞–∫–æ–π –∞–ª—å–±–æ–º —É–∂–µ –∏–º–µ—Ç—Å—è')
                return album['id']
        album = self.vk_session.method('photos.createAlbum', {"title": self.album_name})
        print('–°–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π –∞–ª—å–±–æ–º')
        return album["id"]
